generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id             Int     @id @default(autoincrement())
    username       String
    email          String  @unique
    password       String
    role           String  @default("customer")
    profilePicture String?
    address        String?
    contact        String?
    emailVerified  Boolean @default(false)

    resetPin           String?
    resetPinExpiration DateTime?

    otp String?

    cartItems     CartItem[]
    wishlistItems WishlistItem[]
    reviews       Review[]
    products      Product[]
    orders        Order[]
}

model Category {
    id            Int       @id @default(autoincrement())
    category_name String
    image         String
    discount      Float @default(0.0)
    products      Product[]
}

model Product {
    id                  Int            @id @default(autoincrement())
    product_name        String
    product_price       Float
    product_description String?
    category            Category       @relation(fields: [category_id], references: [id])
    category_id         Int

    admin               User           @relation(fields: [admin_id], references: [id])
    admin_id            Int
    reivews             Review[]
    images              ProductImage[]
    cartItem            CartItem[]
    wishlistItem        WishlistItem[]
    orderItem           OrderItem[]
}

model ProductImage {
    id         Int     @id @default(autoincrement())
    product    Product @relation(fields: [product_id], references: [id])
    product_id Int
    url        String
}

model CartItem {
    id       Int @id @default(autoincrement())
    quantity Int @default(1)

    product    Product @relation(fields: [product_id], references: [id])
    product_id Int

    user    User @relation(fields: [user_id], references: [id])
    user_id Int
}

model WishlistItem {
    id         Int @id @default(autoincrement())
    product    Product @relation(fields: [product_id], references: [id])
    product_id Int

    user    User @relation(fields: [user_id], references: [id])
    user_id Int
}

model Review {
    id     Int    @id @default(autoincrement())
    review String
    rating Int

    user    User @relation(fields: [user_id], references: [id])
    user_id Int

    product    Product @relation(fields: [product_id], references: [id])
    product_id Int
}

model Order{
    id                 Int     @id @default(autoincrement())
    order_date          DateTime @default(now())
    total_amount        Float
    order_status        String
    payment_method      String  @default("khalti")
    delivery_address    String
    delivery_contact    String

    user                User    @relation(fields: [user_id], references: [id])
    user_id             Int

    OTP                 String?
    orderItems          OrderItem[]
}

model OrderItem{
    id                  Int     @id @default(autoincrement())
    quantity            Int     @default(1)
    product_id          Int
    product             Product @relation(fields: [product_id], references: [id])
    order_id            Int
    order               Order   @relation(fields: [order_id], references: [id])
}